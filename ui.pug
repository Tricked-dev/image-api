doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Borzoi API Documentation

    meta(name="description", content="A cool api for getting borzoi images")
    meta(name="keywords", content="borzoi,api,documentation")
    meta(name="author", content="Your Name")
    meta(name="robots", content="index, follow")

    meta(name="twitter:card", content="summary")
    meta(name="twitter:site", content="@trickeddev")
    meta(name="twitter:title", content="Borzoi API Documentation")
    meta(name="twitter:description", content="A cool api for getting borzoi images")
    meta(name="twitter:image", content="/api/image")

    style.
      body {
        font-family: 'Arial', sans-serif;
        line-height: 1.6;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
        color: #333;
      }

      header {
        background-color: #4285f4;
        color: #fff;
        padding: 1em;
        text-align: center;
      }

      section {
        background-color: #fff;
        margin: 1em;
        padding: 1em;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }

      h2, h3 {
        color: #4285f4;
      }

      h1 {
        color: black
      }

      ul {
        list-style-type: none;
        padding: 0;
      }

      li {
        margin-bottom: 0.5em;
      }

      code {
        background-color: #f8f8f8;
        padding: 0.2em;
        border-radius: 3px;
      }

      img {
        max-width: 100%;
        height: auto;
        display: block;
        margin: 1em 0;
      }

      a {
        color: #4285f4;
        text-decoration: none;
        font-weight: bold;
      }

      footer {
        text-align: center;
        margin-top: 2em;
        padding: 1em;
        background-color: #4285f4;
        color: #fff;
      }
  body
    header
      h1 Borzoi API Documentation

    section
      h2 API Endpoints

      ul
        li
          strong Base URL:
          | #{endPoints.base}
        li
          strong Random Image:
          a(href=`${endPoints.base + endPoints.random}?count=1`) #{endPoints.base + endPoints.random}
        li
          strong Images by Tag:
          a(href=`${endPoints.base + endPoints.random}?tag=${tags[0]}`) #{endPoints.base + endPoints.random}?tag=#{tags[0]}
        li
          strong Image by Name:
          | #{endPoints.fromName}

    section
      h2 Usage Information

      p The API supports the following query parameters for images and tags:
      ul
        li
          strong count (up to 5):
          | You can specify the number of images with the count parameter, e.g., #{endPoints.base + endPoints.random}?count=3.
          | This will make it return an array of JSON with image names which you can then use for the static #{endPoints.fromName} endpoint
        li
          strong tag:
          | You can filter images by a single tag using the tag parameter, e.g., #{endPoints.base + endPoints.random}?tag=#{tags[0]}.
        li
          strong Combine multiple tags:
          | You can combine multiple tags with a +, e.g., #{endPoints.base + endPoints.random}?tag=#{tags[0]}+#{tags[1]}+#{tags[2]}.
        li
          strong Image by Tag:
          | You can filter images by tags using the tag parameter with /image, e.g., #{endPoints.base + endPoints.random}?tag=#{tags[0]}+#{tags[1]}+#{tags[2]}.

    section
      h2 Open URL with Tag and List of Tags

      p To open a URL with a specific tag and list of tags, use the following format:
      code #{endPoints.base + endPoints.random}?tag=#{tags[0]}

    section
      h2 Sample Image

      p Get a glimpse of the Borzoi images from the API:
      img(src=`${endPoints.base + endPoints.random}`, alt="Borzoi Image" style="max-width: 200px; height: auto; display: block; margin: 1em 0;")

    section
      h2 Tags and Tag Count

      p
        | Tags:
        each tag in tags
          a(href=`${endPoints.base + endPoints.random}?tag=${tag}`) #{tag}
          if !($index === tags.length - 1)
            | ,
      p
        | There's also an API endpoint to get all the tags here
        a(href=`${endPoints.base + endPoints.tags}`) #{endPoints.base + endPoints.tags}
      p
        | Tag Count: #{tags.length}

    footer
      p
        | Total Number of Images: #{count}